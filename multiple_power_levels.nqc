#define turn_right(s)  SetPower(OUT_A+OUT_C,s);OnFwd(OUT_C);OnRev(OUT_A);
#define turn_left(s)  SetPower(OUT_A+OUT_C,s);OnFwd(OUT_A);OnRev(OUT_C);
#define forwards(s)  SetPower(OUT_A+OUT_C,s);OnFwd(OUT_A+OUT_C);
#define backwards(s)  SetPower(OUT_A+OUT_C,s);OnRev(OUT_A+OUT_C);
#define stop_engines() Off(OUT_A+OUT_C);

#define MINIMUM_POWER 0
#define LOW_POWER 2
#define MID_POWER 4
#define HIGH_POWER 6
#define MAXIMUM_POWER 7

#define NO_MSG 0
#define STOP 1
#define FORWARD 2
#define BACK 3
#define LEFT 4
#define RIGHT 5

int message;
int command;
int power;

task main() {
  while(true) {
    ClearMessage();
    
    message = Message();
    if (message > 10) {
      command = (message - message%10)/10;
      power = message%10;
        if (power >7) {
          power = 7;
        }
    } else {
      command = message;
      power = LOW_POWER;
    }

    until (command != NO_MSG);
    if (command == STOP) {
	    stop_engines(); 
    }
    if (command == FORWARD) {
	    forwards(power); 
    }
    if (command == BACK) {
	    backwards(power); 
    }
    if (command == LEFT) {
	    turn_left(power); 
    }
    if (command == RIGHT) {
    	turn_right(power); 
    }

  }
}
